/**
 * Module dependencies.
 */

var qs = require('qs');
var parseUrl = require('parseurl'),
		url = require('url'),
    querystring = require('querystring'),
    nodemailer = require('nodemailer');
/**
 * Query:
 *
 * Automatically parse the query-string when available,
 * populating the `req.query` object using
 * [qs](https://github.com/visionmedia/node-querystring).
 *
 * Examples:
 *
 *       .use(connect.query())
 *       .use(function(req, res){
 *         res.end(JSON.stringify(req.query));
 *       });
 *
 *  The `options` passed are provided to qs.parse function.
 *
 * @param {Object} options
 * @return {Function}
 * @api public
 */


 transporter = nodemailer.createTransport("SMTP",{
          service: 'Gmail',
              auth: {
              // user: "we.are.seek.us@gmail.com",
              // pass: "adjnt2015"
              user: "We.Are.Seek.Us@gmail.com",
              pass: "Almost.there.15"
            }
          });
          var d = new Date();
          var n = d.getTime();
          var mailOptions = {
              from: "Seek-Health ✔ <We.Are.Seek.Us@gmail.com>", // sender address
              to: 'Seek-Health ✔ <chalangr12@gmail.com>', // list of receivers
              subject: 'Server Started ✔', // Subject line
              text:d.toString() // plaintext body
          };
          console.log("IS THIS WORKING")
          transporter.sendMail(mailOptions, function(error, info){
              if(error)
              {
                  // return console.log(error);
                  var mailOptions = {
                  from: result.username, // sender address
                  to: 'We.Are.Seek.Us@gmail.com', // list of receivers
                  subject: 'Server Started ✔', // Subject line
                  text: n.toString() // plaintext body
                  };
                  transporter.sendMail(mailOptions,function(error, infor){
                      if(error){

                      }
                      else{
                      }

                  })
                  
              }
              else{
                      	console.log("Message sent");
              }
          });


module.exports = function query(options){
  return function query(req, res, next){
    if (!req.query) {
      req.query = ~req.url.indexOf('?')
        ? qs.parse(parseUrl(req).query, options)
        : {};
    }

    next();
  };
};
